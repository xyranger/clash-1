#!/bin/sh /etc/rc.common
# Copyright (c) 2011-2015 OpenWrt.org

START=99
STOP=15


CLASH="/etc/clash/clash"
CLASH_CONFIG="/etc/clash"
CRON_FILE="/etc/crontabs/root"

USE_PROCD=1

PDNSD_BIN="/var/sbin/dnscache"
DNSMASQ_RESTART=N
DNS_SERVER="114.114.114.114,114.114.115.115,8.8.8.8,8.8.4.4"

pdnsd_genconfig() {
  DNS_SERVER=$(uci get clash.config.dnsserver 2>/dev/null)
  pdnsd_port=$(uci get clash.config.pdnsd 2>/dev/null)
	[ -d /var/etc ] || mkdir -p /var/etc

  if [ ! -f /var/dnscache/pdnsd.cache ]; then
    mkdir -p /var/dnscache
    echo -ne "pd13\000\000\000\000" > /var/dnscache/pdnsd.cache
    chown -R nobody.nogroup /var/dnscache
	fi
	
	cat > /var/etc/dnscache.conf <<EOF
global {
    perm_cache=1024;        
    cache_dir="/var/dnscache";     
    pid_file = /var/run/dnscache.pid;
    server_ip = 0.0.0.0;        
    server_port=5333;           
    status_ctl = on;
    paranoid=on;                  
    query_method=udp_only;      
    neg_domain_pol = off;  
    par_queries = 400;          
    min_ttl = 1h;               
    max_ttl = 1w;               
    timeout = 10;               
}

server {  
    label = "routine";         
    ip = $DNS_SERVER;     
    timeout = 20;              
    reject = 74.125.127.102,  
        74.125.155.102,  
        74.125.39.102,  
        74.125.39.113,  
        209.85.229.138,  
        128.121.126.139,  
        159.106.121.75,  
        169.132.13.103,  
        192.67.198.6,  
        202.106.1.2,  
        202.181.7.85,  
        203.161.230.171,  
        203.98.7.65,  
        207.12.88.98,  
        208.56.31.43,  
        209.145.54.50,  
        209.220.30.174,  
        209.36.73.33,  
        211.94.66.147,  
        213.169.251.35,  
        216.221.188.182,  
        216.234.179.13,  
        243.185.187.39,  
        37.61.54.158,  
        4.36.66.178,  
        46.82.174.68,  
        59.24.3.173,  
        64.33.88.161,  
        64.33.99.47,  
        64.66.163.251,  
        65.104.202.252,  
        65.160.219.113,  
        66.45.252.237,  
        69.55.52.253,  
        72.14.205.104,  
        72.14.205.99,  
        78.16.49.15,  
        8.7.198.45,  
        93.46.8.89,  
        37.61.54.158,  
        243.185.187.39,  
        190.93.247.4,  
        190.93.246.4,  
        190.93.245.4,  
        190.93.244.4,  
        65.49.2.178,  
        189.163.17.5,  
        23.89.5.60,  
        49.2.123.56,  
        54.76.135.1,  
        77.4.7.92,  
        118.5.49.6,  
        159.24.3.173,  
        188.5.4.96,  
        197.4.4.12,  
        220.250.64.24,  
        243.185.187.30,  
        249.129.46.48,  
        253.157.14.165;  
    reject_policy = fail;  
}

server {  
    label = "special";                  
    ip = 208.67.222.222, 208.67.220.220; 
    port = 5353;                        
    proxy_only = on;
    timeout = 20;	
}


  

source {
	owner=localhost;
//	serve_aliases=on;
	file="/etc/hosts";
}

rr {
	name=localhost;
	reverse=on;
	a=127.0.0.1;
	owner=localhost;
	soa=localhost,root.localhost,42,86400,900,86400,86400;
}
EOF
  
  [ -d /var/sbin ] || mkdir -p /var/sbin
  [ -f /var/sbin/dnscache ] || cp -a /usr/sbin/pdnsd /var/sbin/dnscache
	echo "Start DNS Cache"
}

stop_pdnsd() {
  kill $(pidof dnscache) >/dev/null 2>&1 || kill -9 $(ps | grep dnscache | grep -v grep | awk '{print $1}') >/dev/null 2>&1
  echo "Stop DNS Cache"
}


start_pdnsd() {
pdnsd_port=$(uci get clash.config.pdnsd 2>/dev/null)
	local usr_dns="$1"
    local usr_port="$2"
  
	local tcp_dns_list="208.67.222.222, 208.67.220.220, 8.8.8.8, 8.8.4.4, 1.1.1.1"
	[ -z "$usr_dns" ] && usr_dns="8.8.8.8"
	[ -z "$usr_port" ] && usr_port="53"

  [ -d /var/etc ] || mkdir -p /var/etc

   if [ ! -d /var/pdnsd ];then
       mkdir -p /var/pdnsd
       echo -ne "pd13\000\000\000\000" >/var/pdnsd/pdnsd.cache
       chown -R nobody:nogroup /var/pdnsd
   fi
	
	cat > /var/etc/pdnsd.conf <<EOF
global {
	perm_cache=1024;
	cache_dir="/var/pdnsd";
	pid_file = /var/run/pdnsd.pid;
	run_as="nobody";
	server_ip = 0.0.0.0;
	server_port = $pdnsd_port;
	status_ctl = on;
	query_method = tcp_only;
	min_ttl=1h;
	max_ttl=1w;
	timeout=20;
	neg_domain_pol=on;
	proc_limit=2;
	procq_limit=8;
}


server {
	label= "v2-usrdns";
	ip = $usr_dns;
	port = $usr_port;
	timeout=20;
	uptest=none;
	interval=10m;
	purge_cache=off;
}
server {
	label= "v2-pdnsd";
	ip = $tcp_dns_list;
	port = $pdnsd_port;
	timeout=20;
	uptest=none;
	interval=10m;
	purge_cache=off;
}
EOF

	/usr/sbin/pdnsd -c /var/etc/pdnsd.conf -d
	
}


change_dns() {
dns_server=$(uci get clash.config.dns_server 2>/dev/null)
dns_serve1=$(uci get dhcp.@dnsmasq[0].server 2>/dev/null)

	if [ $dns_serve1 ]; then
		uci delete dhcp.@dnsmasq[0].server >/dev/null 2>&1
	fi	
	uci add_list dhcp.@dnsmasq[0].server=127.0.0.1#5333
	uci add_list dhcp.@dnsmasq[0].server=$dns_server
	uci delete dhcp.@dnsmasq[0].resolvfile
	uci set dhcp.@dnsmasq[0].noresolv=1
	uci commit dhcp
}

revert_dns() {
	dns_server=$(uci get clash.config.dns_server 2>/dev/null)
	uci del_list dhcp.@dnsmasq[0].server=127.0.0.1#5333 >/dev/null 2>&1
	uci del_list dhcp.@dnsmasq[0].server=$dns_server >/dev/null 2>&1
	uci set dhcp.@dnsmasq[0].resolvfile=/tmp/resolv.conf.auto
	uci set dhcp.@dnsmasq[0].noresolv=0
	uci commit dhcp
}

get_dnsmasq() {
	local pid=$(pidof dnsmasq)
	[ $? -ne 0 ] && echo "/tmp/dnsmasq.d"
	local conf_dir=$(cat /etc/dnsmasq.conf | grep conf-dir= | sed 's/.*=//')
	local conf_tmp=$(cat /proc/$pid/cmdline | grep dnsmasq.conf)
	local conf_dir_tmp=$(cat $conf_tmp | grep conf-dir= | sed 's/.*=//')
	if [ -n "$conf_dir" ]; then
		echo $conf_dir
	elif [  -n "$conf_dir_tmp" ];then
		echo $conf_dir_tmp
	else
		echo "/tmp/dnsmasq.d"
	fi
}



add_cron()
{
	sed -i '/clash.log/d' $CRON_FILE
	echo '0 1 * * 0 echo "" > /tmp/clash.log' >> $CRON_FILE
	[ -n "$(grep -w "/usr/share/clash/clash.sh" $CRON_FILE)" ] && sed -i '/\/usr\/share\/clash\/clash.sh/d' $CRON_FILE
	[ $(uci get clash.config.auto_update 2>/dev/null) -eq 1 ] && echo "0 $(uci get clash.config.update_time 2>/dev/null) * * * /usr/share/clash/clash.sh" >> $CRON_FILE
	#[ -z "$(grep -w "/usr/share/clash/update.sh" $CRON_FILE)" ] && echo "0 5 * * 0 /usr/share/clash/update.sh" >> $CRON_FILE
	crontab $CRON_FILE
}

del_cron()
{
	sed -i '/clash/d' $CRON_FILE
	sed -i '/clash.log/d' $CRON_FILE
	/etc/init.d/cron restart
}


dns_poisoning() {
	local gfw_list=/etc/clash/dnsmasq_gfwlist.conf
	local gfw_list_tmp=$dnsmasq_confdir/dnsmasq_gfwlist.conf
	start_pdnsd
			
	[ ! -f $gfw_list_tmp ] && {
		ln -s $gfw_list $gfw_list_tmp
	}	
}




start_service() {

proxy_port=$(uci get clash.config.proxy_port 2>/dev/null)

if pidof clash >/dev/null; then
    kill $(pidof clash) >/dev/null 2>&1 || kill -9 $(ps | grep clash | grep -v grep | awk '{print $1}') >/dev/null 2>&1
    sleep 2
fi



  
enable=$(uci get clash.config.enable 2>/dev/null)

if [ $enable -eq 1 ]; then


	  dns=$(uci get clash.config.dns 2>/dev/null)
	  bbr=$(uci get clash.config.bbr 2>/dev/null)
	  if [ $dns -eq 1 ];  then
		pdnsd_genconfig
		procd_open_instance
		procd_set_param command "$PDNSD_BIN" -c /var/etc/dnscache.conf
		procd_set_param respawn
		procd_set_param stderr 1
		procd_close_instance
		change_dns
	  fi
	  if [ $bbr -eq 1 ];  then
		sysctl -w net.ipv4.tcp_congestion_control=bbr
	  else
		sysctl -w net.ipv4.tcp_congestion_control=cubic
	  fi
	  uci set firewall.@defaults[0].flow_offloading=$(uci get flowoffload.@flow[0].flow_offloading)
	  uci set firewall.@defaults[0].flow_offloading_hw=$(uci get flowoffload.@flow[0].flow_offloading_hw)
	  uci commit firewall
	
	  /etc/init.d/firewall restart
	 
	 
	 
	dnsmasq_confdir=$(get_dnsmasq)
	dns_poisoning
  
    iptables -t nat -N clash
                
    iptables -t nat -A clash -d 0.0.0.0/8 -j RETURN
    iptables -t nat -A clash -d 10.0.0.0/8 -j RETURN
    iptables -t nat -A clash -d 127.0.0.0/8 -j RETURN
    iptables -t nat -A clash -d 169.254.0.0/16 -j RETURN
    iptables -t nat -A clash -d 172.16.0.0/12 -j RETURN
    iptables -t nat -A clash -d 192.168.0.0/16 -j RETURN
    iptables -t nat -A clash -d 224.0.0.0/4 -j RETURN
    iptables -t nat -A clash -d 240.0.0.0/4 -j RETURN
        
  
    iptables -t nat -A clash -p tcp -j REDIRECT --to-ports $proxy_port
        
    iptables -t nat -A PREROUTING -p tcp -j clash

      
	nohup $CLASH -d "$CLASH_CONFIG" > /tmp/clash.log 2>&1 &

	ln -s /usr/share/clash/web /www/clash
	
	/etc/init.d/dnsmasq restart >/dev/null 2>&1
	
	
	if pidof clash >/dev/null; then
		add_cron
	else
		echo "CANNOT START"
	fi

fi
}



stop_service() {

    iptables -t nat -D PREROUTING -p tcp -j clash
    iptables -t nat -F clash
    iptables -t nat -X clash
        
    revert_dns
    uci set firewall.@defaults[0].flow_offloading=$(uci get flowoffload.@flow[0].flow_offloading)
    uci set firewall.@defaults[0].flow_offloading_hw=$(uci get flowoffload.@flow[0].flow_offloading_hw)
    uci commit firewall
	
		
    kill $(pidof dnscache) >/dev/null 2>&1 || kill -9 $(ps | grep dnscache | grep -v grep | awk '{print $1}') >/dev/null 2>&1
	
	kill -9 $(ps | grep pdnsd | grep -v grep | awk '{print $1}') >/dev/null 2>&1 
	rm -rf /var/pdnsd
	rm -f /var/etc/pdnsd.conf

	kill -9 `pidof clash|sed "s/$//g"` 2>/dev/null
	
	if [ "$DNSMASQ_RESTART" = N ]; then
      /etc/init.d/dnsmasq restart && echo "DNSMASQ revert"
      /etc/init.d/firewall restart
    fi
	
    rm -rf /www/clash 2> /dev/null
	del_cron    
}

restart(){
    DNSMASQ_RESTART=Y
    stop
    start
	  /etc/init.d/dnsmasq restart && echo "DNSMASQ restart"
    /etc/init.d/firewall restart
}
